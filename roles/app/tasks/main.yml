---

- name: Set firewall rules for AzerothCore
  ufw: rule=allow port={{ item }}
  with_items:
    - 3306
    - 3724
    - "{{ realmlist.port }}"

- name: Create default user
  user:
    name: "{{ inventory_hostname }}"
    shell: /bin/bash
    system: yes
    state: present

- name: Set staff access for default user
  authorized_key:
    user: "{{ inventory_hostname }}"
    state: present
    key: "{{ item.key }}"
  with_items: "{{ pubkeys.staff }}"

- name: Set github access for default user
  authorized_key:
    user: "{{ inventory_hostname }}"
    state: present
    key: "{{ pubkeys.github }}"

- name: Update apt list
  apt:
    update_cache: yes

- name: Install AzerothCore dependencies
  apt:
    name:
      - git
      - cmake
      - make
      - gcc
      - g++
      - clang
      - libmysqlclient-dev
      - libssl-dev
      - libbz2-dev
      - libreadline-dev
      - libncurses-dev
      - mysql-server
      - libboost-all-dev
      - unzip
    update_cache: yes
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Add Node.js to repositories
  shell: curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -

- name: Install Node.js and pip
  apt:
    name:
      - nodejs
      - python3-pip
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Install python dependencies
  pip:
    name:
      - pymysql

- name: Install tmux
  apt:
    name:
      - tmux
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Create winzig user
  user:
    name: winzig
    shell: /bin/bash
    system: yes
    state: present
  when: "'winzig' in group_names"

- name: Set authorized key for winzig copying it from the current user
  authorized_key:
    user: winzig
    state: present
    key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"
  when: "'winzig' in group_names"

- name: Set firewall rules for Winzig
  ufw: rule=allow port={{ item }} proto=tcp
  with_items:
    - http
    - https
  when: "'winzig' in group_names"

- name: Create databases
  mysql_db:
    name:
      - "{{ database.world.name }}"
      - "{{ database.characters.name }}"
      - "{{ database.auth.name }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create database user
  mysql_user:
    name: "{{ mysql.user }}"
    password: "{{ mysql.pass }}"
    host: "{{ item }}"
    priv: '*.*:ALL,GRANT'
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  with_items: "{{ database.hosts }}"

- name: Install python backup dependencies
  pip:
    name:
      - pyrogram
      - tgcrypto

- name: Checkout backup source
  git:
    repo: "{{ database.backup.git }}"
    dest: "/home/{{ inventory_hostname }}/backup"
    version: "{{ database.backup.version }}"
  when: database.backup is defined

- name: Copy backup configuration
  template:
    src: config.json.j2
    dest: "/home/{{ inventory_hostname }}/backup/config.json"
    owner: "{{ inventory_hostname }}"
    group: "{{ inventory_hostname }}"
    mode: '0640'

- name: Add daily cron job to backup the database and logs
  cron:
    name: Daily backup
    hour: 0
    minute: 0
    job: "/usr/bin/python3 /home/{{ inventory_hostname }}/backup/bak.py"
  when: database.backup is defined

- name: Create backup user
  user:
    name: bup
    shell: /bin/bash
    create_home: yes
    generate_ssh_key: yes
    state: present
  register: bup
  when: backup is defined

- name: Register public SSH key
  set_fact:
    pubkey: "{{ bup.ssh_public_key }}"
  when: backup is defined

- name: Set authorized key for backup user copying it from the current user
  authorized_key:
    user: bup
    state: present
    key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"
  when: backup is defined

- name: Copy scripts
  template:
    src: backup.sh.j2
    dest: "/home/bup/backup.sh"
    owner: bup
    group: bup
    mode: '0600'
  when: backup is defined

- name: Get restic
  get_url:
    url: https://github.com/restic/restic/releases/download/v0.12.1/restic_0.12.1_linux_amd64.bz2
    dest: /home/bup
  register: restic
  when: backup is defined

- name: Unarchive restic
  shell: bunzip2 {{ restic.dest }} && mv {{ restic.dest | splitext | first }} /home/bup/restic
  when: backup is defined

- name: Change permissions for restic
  file:
    path: /home/bup/restic
    owner: bup
    group: bup
    mode: '0750'
  when: backup is defined

- name: Change capabilities for restic
  capabilities:
    path: /home/bup/restic
    capability: cap_dac_read_search=+ep
    state: present
  when: backup is defined

- name: Download swaks
  get_url:
    url: http://www.jetmore.org/john/code/swaks/files/swaks-20201014.0/swaks
    dest: /home/bup/swaks
    mode: a+x
  when: backup is defined

- name: Install perl for swaks and bzip2 for restic
  apt:
    name:
      - perl
      - bzip2
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: backup is defined

- name: Add weekly cron job to backup the entire server
  cron:
    name: Weekly backup
    weekday: 1
    hour: 0
    minute: 0
    job: /usr/bin/bash /home/bup/backup.sh
  when: backup is defined
