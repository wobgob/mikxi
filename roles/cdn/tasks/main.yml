---

- name: Set firewall rules for MinIO
  ufw:
    rule: allow
    from_port: 9000
    to_port: 9010
    proto: tcp

- name: Create cdn user
  user:
    name: cdn
    shell: /bin/bash
    state: present

- name: Set authorized key for cdn user copying it from the current user
  authorized_key:
    user: cdn
    state: present
    key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"

- name: Get MinIO client
  get_url:
    url: "https://dl.min.io/client/mc/release/linux-amd64/{{ cdn.client }}.deb"
    owner: cdn
    group: cdn
    dest: /home/cdn/mcli.deb

- name: Install MinIO client
  apt:
    deb: /home/cdn/mcli.deb

- name: Create disk
  file:
    path: /mnt/disk1/data
    state: directory
    owner: cdn
    group: cdn
    mode: '0750'

- name: Get MinIO server
  get_url:
    url: "https://dl.min.io/server/minio/release/linux-amd64/{{ cdn.server }}.deb"
    dest: /home/cdn/minio.deb
    owner: cdn
    group: cdn

- name: Install MinIO
  apt:
    deb: /home/cdn/minio.deb

- name: Copy minio.sh
  template:
    src: minio.sh.j2
    dest: /home/cdn/minio.sh
    owner: cdn
    group: cdn
    mode: '0640'

- name: Copy startup.sh
  copy:
    src: startup.sh
    dest: /home/cdn/startup.sh
    owner: cdn
    group: cdn

- name: Start MinIO on boot
  cron:
    name: "Start MinIO"
    special_time: reboot
    job: "/bin/bash /home/cdn/startup.sh"

- name: Start MinIO
  command: /bin/bash /home/cdn/startup.sh

- name: Get Traefik
  unarchive:
    src: "{{ cdn.proxy }}"
    dest: /home/cdn
    owner: cdn
    group: cdn
    remote_src: yes

- name: Set capabilities of Traefik
  community.general.capabilities:
    path: /home/cdn/traefik
    capability: cap_net_bind_service=+ep 
    state: present

- name: Copy traefik.yml
  template:
    src: traefik.yml.j2
    dest: /home/cdn/traefik.yml
    owner: cdn
    group: cdn

- name: Copy traefik.sh
  copy:
    src: traefik.sh
    dest: /home/cdn/traefik.sh
    owner: cdn
    group: cdn

- name: Start Traefik on boot
  cron:
    name: "Start Traefik"
    special_time: reboot
    job: "/bin/bash /home/cdn/traefik.sh"

- name: Install pip
  apt:
    name:
      - python3-pip
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Install python dependencies
  pip:
    name:
      - requests

- name: Clone sidekick
  git:
    repo: "{{ cdn.sidekick.repo }}"
    dest: /home/cdn/sidekick
    version: "{{ cdn.sidekick.version }}"

- name: Change sidekick permissions
  file:
    path: /home/cdn/sidekick
    owner: cdn
    group: cdn
    state: directory
    recurse: yes

- name: Copy sidekick configuration
  template:
    src: config.json.j2
    dest: /home/cdn/sidekick/config.json
    owner: cdn
    group: cdn
    mode: '0640'

- name: Run sidekick every minute
  cron:
    name: "Run sidekick"
    job: "/usr/bin/python3 /home/cdn/sidekick/sidekick.py"

- name: Add a cloud storage service for root
  command: "mcli alias set local http://localhost:9000 {{ cdn.user }} {{ cdn.pass }}"

- name: Create git user
  user:
    name: git
    shell: /bin/bash
    state: present

- name: Copy public SSH keys
  copy:
    dest: "/tmp/{{ item.name }}.pub"
    content: "{{ item.key }}"
    owner: git
    group: git
    mode: '0644'
  with_items: "{{ pubkeys.staff }}"

- name: Clone gitolite
  git:
    repo: https://github.com/sitaramc/gitolite
    dest: /home/git/gitolite

- name: Install gitolite
  shell: |
    mkdir -p /home/git/bin
    /home/git/gitolite/install -to /home/git/bin
  args:
    chdir: /home/git

- name: Change ownership to git
  file:
    dest: /home/git
    owner: git
    group: git
    recurse: yes

- name: Copy git-daemon service
  copy:
    src: git-daemon.service
    dest: /etc/systemd/system/git-daemon.service

- name: Enable git-daemon service
  systemd:
    state: started
    name: git-daemon
    enabled: yes

- name: Set firewall rules for git-daemon
  ufw: rule=allow port=9418
